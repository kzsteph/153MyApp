{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/kexinzhang/Desktop/153MyApp/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Button } from 'react-native-elements';\nimport Form from \"./components/Form\";\nimport CardFormat from \"./components/CardFormat\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var sampleItem = {\n    name: 'kexin',\n    phone: '7815471811',\n    email: 'zxksteph@gmail.com',\n    address: '415 South Street',\n    school: 'Brandeis',\n    major: 'Econ, Applied Math, CS',\n    year: '2021'\n  };\n\n  var _useState = useState([sampleItem]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cards = _useState2[0],\n      setCards = _useState2[1];\n\n  var _useAsyncStorage = useAsyncStorage('CardBox'),\n      getItem = _useAsyncStorage.getItem,\n      setItem = _useAsyncStorage.setItem;\n\n  var readItemFromStorage = function readItemFromStorage() {\n    var item, newValue;\n    return _regeneratorRuntime.async(function readItemFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getItem());\n\n          case 3:\n            item = _context.sent;\n            newValue = JSON.parse(item);\n            newValue = newValue || [sampleItem];\n            setCards(newValue);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setCards([sampleItem]);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var writeItemToStorage = function writeItemToStorage(newValue) {\n    return _regeneratorRuntime.async(function writeItemToStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(setItem(JSON.stringify(newValue)));\n\n          case 2:\n            setCards(newValue);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readItemFromStorage();\n  }, []);\n\n  var addCard = function addCard(card) {\n    card.key = Math.random().toString();\n    writeItemToStorage([card].concat(_toConsumableArray(cards)));\n  };\n\n  var deleteItem = function deleteItem(key) {\n    var newCards = cards.filter(function (x) {\n      return x.key != key;\n    });\n    writeItemToStorage(newCards);\n  };\n\n  return React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: '#008b8b',\n      width: 120\n    },\n    title: \"Create New Name Card\",\n    onPress: function onPress() {\n      navigation.navigate('Name Card Form');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), React.createElement(FlatList, {\n    data: cards,\n    keyExtractor: function keyExtractor(card, index) {\n      return 'key' + index;\n    },\n    renderItem: function renderItem(_ref2) {\n      var card = _ref2.card;\n      return React.createElement(CardFormat, {\n        card: card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Name Card Form\",\n    component: Form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/kexinzhang/Desktop/153MyApp/App.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","Button","Form","CardFormat","HomeScreen","navigation","sampleItem","name","phone","email","address","school","major","year","cards","setCards","useAsyncStorage","getItem","setItem","readItemFromStorage","item","newValue","JSON","parse","writeItemToStorage","stringify","addCard","card","key","Math","random","toString","deleteItem","newCards","filter","x","styles","button","backgroundColor","width","navigate","index","Stack","App","StyleSheet","create","container","flex","alignItems","justifyContent","flexDirection"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, FlatList} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Button } from 'react-native-elements';\nimport Form from './components/Form';\nimport CardFormat from './components/CardFormat';\n\nfunction HomeScreen({navigation}) {\n\n  const sampleItem =\n    {name:'kexin', phone:'7815471811', email:'zxksteph@gmail.com', address:'415 South Street',\n    school:'Brandeis', major:'Econ, Applied Math, CS', year:'2021'}\n\n  const [cards, setCards] = useState([sampleItem])\n  const { getItem, setItem } = useAsyncStorage('CardBox')\n\n  const readItemFromStorage = async () => {\n    try {\n      let item = await getItem();\n      let newValue = JSON.parse(item);\n      newValue = newValue || [sampleItem]\n      setCards(newValue);\n    }\n    catch(e) {\n      setCards([sampleItem])\n    }\n  };\n\n  const writeItemToStorage = async newValue => {\n    await setItem(JSON.stringify(newValue));\n    setCards(newValue);\n  };\n\n  useEffect(() => {\n    readItemFromStorage();\n  }, []);\n\n  const addCard = (card) => {\n    card.key = Math.random().toString();\n    writeItemToStorage([card,...cards]);\n  }\n\n  const deleteItem = (key) => {\n    const newCards = cards.filter(x => x.key!=key);\n    writeItemToStorage(newCards);\n  }\n\n\n  return (\n    <View style = {styles.button}>\n    <Button\n      buttonStyle={{backgroundColor: '#008b8b',width:120}}\n      title=\"Create New Name Card\"\n      onPress={() => {\n        navigation.navigate('Name Card Form');\n      }}\n    />\n\n    <FlatList\n      data={cards}\n      keyExtractor={(card, index) => 'key'+index}\n      renderItem={({ card }) => (\n        <CardFormat card = {card}/> //create a Card.js to regulate the format\n      )}\n    />\n    </View>\n  );\n}\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen}/>\n        <Stack.Screen name=\"Name Card Form\" component={Form}/>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}